function ICPData = readICPData(RotationPATH, OLdata, refToFirstFrame)
%% Import data from text file.
% Script for importing data from the following text file:
%
%    D:\KIM_Development\Data\Rot_Experiments\Triangulation\EXP_08012016\EXP1\CH1\Rotation.txt
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/02/15 16:07:12

if OLdata ==1
    filename = ls([RotationPATH '\OnlineKIM\Rotation* (OL).txt']);
    
elseif OLdata ==0
    filename = ls([RotationPATH 'Rotation*.txt']);
    
end

%% Initialize variables.
%RotationPATH = 'D:\KIM_Development\Data\Rot_Experiments\Triangulation\EXP_08012016\EXP1\CH1';
%%filename = ls([RotationPATH '\Rotation*.txt']);
delimiter = ',';
startRow = 2;

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';
noOfRotFiles = size(filename,1);

if noOfRotFiles > 1
    noOfRotFiles = size(filename,1);
    for n=1:noOfRotFiles
        fID = fopen([RotationPATH 'OnlineKIM\Rotation_' num2str(n-1) ' (OL).txt'],'r');
        rawDataCurrent = textscan(fID, formatSpec, 'Delimiter', delimiter, 'HeaderLines' ,startRow-1, 'ReturnOnError', false);
        eval(['DataArray' num2str(n) '=rawDataCurrent']);
        fclose(fID)
    end
    
    noOfColumns = 7;
    for n=1:noOfColumns
        for k=1:noOfRotFiles
            
            if (k==1)
                DataArray{n} = [eval(['DataArray' num2str(k) '{n}'])];
            else
                DataArray{n} = [DataArray{n}; eval(['DataArray' num2str(k) '{n}']) ];
            end
        end
    end
else
    
    %% Open the text file.
    if OLdata==1
        fileID = fopen([RotationPATH '\OnlineKIM\' filename],'r');
    elseif OLdata==0
        fileID = fopen([RotationPATH filename],'r');
    end
    %% Read columns of data according to format string.
    % This call is based on the structure of the file used to generate this
    % code. If an error occurs for a different file, try regenerating the code
    % from the Import Tool.
    DataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'HeaderLines' ,startRow-1, 'ReturnOnError', false);
    
    %% Close the text file.
    fclose(fileID);
end
%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ICPData.FrameNo = DataArray{:, 1};
if (size(find(diff(ICPData.FrameNo) < 0),1) ~= 0)
    stitches   = find(diff(ICPData.FrameNo) < 0);
    Nostitches = size(stitches,1);
    
    for n=1:Nostitches
        ICPData.FrameNo(stitches(n)+1:end) = ICPData.FrameNo(stitches(n)+1:end)+ICPData.FrameNo(stitches(n));
    end
end

ICPData.tLR = DataArray{:, 2};
ICPData.tSI = DataArray{:, 3};
ICPData.tAP = DataArray{:, 4};
ICPData.rLR = DataArray{:, 5};
ICPData.rSI = DataArray{:, 6};
ICPData.rAP = DataArray{:, 7};

if refToFirstFrame
    %%Calculate motion relative to first pose
    t6 = zeros(4,4,length(ICPData.tSI));
    mot = zeros(length(ICPData.tSI),6);
    
    for i=1:length(ICPData.tLR)
        t6(:,:,i) = make_t6(ICPData.tLR(i), ICPData.tSI(i), ICPData.tAP(i), ICPData.rSI(i), ICPData.rLR(i), ICPData.rAP(i));
    end
    
    for i=1:length(ICPData.tLR)
        mot(i,:) = cvtm4(t6(:,:,i)*inv(t6(:,:,1)));
    end
else
    mot = [ICPData.rSI ICPData.rLR ICPData.rAP ICPData.tLR ICPData.tSI ICPData.tAP];
end

ICPData.tLR = mot(:,4);
ICPData.tSI = mot(:,5);
ICPData.tAP = mot(:,6);
ICPData.rLR = mot(:,2);
ICPData.rSI = mot(:,1);
ICPData.rAP = mot(:,3);

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID DataArray ans;
end